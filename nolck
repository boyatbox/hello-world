using System; 
using System.Runtime.InteropServices;

namespace App { 

class MainClass{
		[DllImport("kernel32.dll", CharSet = CharSet.Auto, SetLastError = true)]
		public static extern EXECUTION_STATE SetThreadExecutionState(EXECUTION_STATE esFlags);
		static void Main(string[] args){
			SetThreadExecutionState(EXECUTION_STATE.ES_DISPLAY_REQUIRED | EXECUTION_STATE.ES_SYSTEM_REQUIRED | EXECUTION_STATE.ES_CONTINUOUS);
				
			if(args.Length > 0){
				int timeout = int.Parse(args[0]);
				Console.WriteLine("ON.Timeout:"+ timeout+" min.");
				System.Threading.Thread.Sleep(TimeSpan.FromMinutes(timeout));
				SetThreadExecutionState(EXECUTION_STATE.ES_CONTINUOUS);
				Console.WriteLine("OFF.");
			}else{
				Console.WriteLine("On!Timeout: None");
				System.Threading.Thread.Sleep(-1);
			}
		}
	}
}

[FlagsAttribute]
public enum EXECUTION_STATE : uint
{
    ES_SYSTEM_REQUIRED = 0x00000001,
    ES_DISPLAY_REQUIRED = 0x00000002,
    ES_AWAYMODE_REQUIRED = 0x00000040,
    ES_CONTINUOUS = 0x80000000,
}

